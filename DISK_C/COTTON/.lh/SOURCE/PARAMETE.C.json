{
    "sourceFile": "SOURCE/PARAMETE.C",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1681536324684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1681536324684,
            "name": "Commit-0",
            "content": "#include \"TOTAL.H\"\r\n// 专门用来写有关edit和past的函数\r\n\r\nint judgename(char name[])\r\n{\r\n    static int i, j;\r\n    if (name[0] == '\\0')\r\n    {\r\n        void *buffer;\r\n        unsigned s;\r\n        setfillstyle(1, CYAN);\r\n        bar(240, 30, 470, 70);\r\n        puthz(242, 33, \"参数名不能为空\", 32, 32, BLUE);\r\n        delay(1000);\r\n        setfillstyle(1, 0);\r\n        bar(240, 30, 470, 70);\r\n        puthz(240, 30, \"请选择地区\", 32, 32, BLUE);\r\n        return 0;\r\n    }\r\n    for (i = 0; i < h->lenpar; i++)\r\n    {\r\n        for (j = 0; j < 10; j++)\r\n        {\r\n            if (name[j] != (h->parameter[i]).name[j])\r\n            {\r\n                break;\r\n            }\r\n            if (name[j] == '\\0')\r\n            {\r\n                j = 10;\r\n                break;\r\n            }\r\n        }\r\n        if (j == 10)\r\n        {\r\n            setfillstyle(1, CYAN);\r\n            bar(240, 30, 470, 70);\r\n            puthz(242, 33, \"参数名已经存在\", 32, 32, BLUE);\r\n            delay(1000);\r\n            setfillstyle(1, 0);\r\n            bar(240, 30, 470, 70);\r\n            puthz(240, 30, \"请选择地区\", 32, 32, BLUE);\r\n\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nint judgeS(char S[])\r\n{\r\n    int i = 0;\r\n    if (S[0] == '\\0')\r\n    {\r\n        setfillstyle(1, CYAN);\r\n        bar(80, 100, 380, 140);\r\n        puthz(83, 100, \"土地面积不能为空\", 32, 32, BLUE);\r\n        delay(1000);\r\n        setfillstyle(1, 0);\r\n        bar(80, 100, 380, 140);\r\n        puthz(70, 100, \"本地推荐种植的棉花种类为：\", 32, 32, BLUE);\r\n        return 0;\r\n    }\r\n    for (i = 0; i < strlen(S); i++)\r\n    {\r\n        if (S[i] > '9' || S[i] < '0')\r\n        {\r\n            setfillstyle(1, CYAN);\r\n            bar(80, 100, 340, 140);\r\n            puthz(83, 100, \"请输入数字\", 32, 32, BLUE);\r\n            delay(1000);\r\n            setfillstyle(1, 0);\r\n            bar(80, 100, 340, 140);\r\n            puthz(70, 100, \"本地推荐种植的棉花种类为：\", 32, 32, BLUE);\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nvoid wr_parameter(struct Parameter *abc)\r\n{\r\n    FILE *fp;\r\n    user *u = (user *)malloc(sizeof(user));\r\n    int i, j, k, all;\r\n    if ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n    {\r\n        puthz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n        delay(3000);\r\n        return;\r\n    }\r\n    fseek(fp, 0, SEEK_END);\r\n    all = ftell(fp) / sizeof(user); // 文件里user的数量\r\n    for (i = 0; i < all; i++)\r\n    {\r\n        fseek(fp, i * sizeof(user), SEEK_SET);\r\n        fread(u, sizeof(user), 1, fp);\r\n        for (j = 0; j < 10; j++) // 查找账号位置\r\n        {\r\n\r\n            if (u->username[j] != h->username[j])\r\n            {\r\n                break;\r\n            }\r\n            if (h->username[j] == '\\0')\r\n            {\r\n                j = 10;\r\n                break;\r\n            }\r\n        }\r\n        if (j == 10) // 找到了就修改参数\r\n        {\r\n            // strcpy(h->parameter[h->lenpar].name,abc->name);\r\n            for (k = 0; k < 10; k++)\r\n            {\r\n                h->parameter[h->lenpar].name[k] = abc->name[k];\r\n            }\r\n            h->parameter[h->lenpar].place = abc->place;\r\n            h->parameter[h->lenpar].shape = abc->shape;\r\n            h->parameter[h->lenpar].type = abc->type;\r\n            strcpy(h->parameter[h->lenpar].S, abc->S);\r\n            for (k = 0; k < dense_points_max; k++)\r\n            {\r\n                h->parameter[h->lenpar].x[k] = abc->x[k];\r\n                h->parameter[h->lenpar].y[k] = abc->y[k];\r\n            }\r\n            h->parameter[h->lenpar].lenxy = abc->lenxy;\r\n            h->lenpar += 1;\r\n            fseek(fp, i * sizeof(user), SEEK_SET);\r\n            fwrite(h, sizeof(user), 1, fp);\r\n            puthz(220, 100, \"增加参数成功\", 32, 32, BLUE);\r\n            delay(2000);\r\n        }\r\n    }\r\n    // char name[10];//名字\r\n    // char place;//产区\r\n    // char shape;//土地形状\r\n    // char type;//收割机类型\r\n    // int S;//面积\r\n    // int xyz[200];//坐标\r\n\r\n    free(u);\r\n    u = NULL;\r\n    fclose(fp);\r\n    return;\r\n}\r\n\r\n// 把当前登录的用户重新写进文件\r\nvoid wr_h(void)\r\n{\r\n    FILE *fp;\r\n    user *u = (user *)malloc(sizeof(user));\r\n    int i, j, k, all;\r\n    if ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n    {\r\n        puthz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n        delay(3000);\r\n        return;\r\n    }\r\n    fseek(fp, 0, SEEK_END);\r\n    all = ftell(fp) / sizeof(user); // 文件里user的数量\r\n    for (i = 0; i < all; i++)\r\n    {\r\n        fseek(fp, i * sizeof(user), SEEK_SET);\r\n        fread(u, sizeof(user), 1, fp);\r\n        for (j = 0; j < 10; j++)\r\n        {\r\n\r\n            if (u->username[j] != h->username[j])\r\n            {\r\n                break;\r\n            }\r\n            if (h->username[j] == '\\0')\r\n            {\r\n                j = 10;\r\n                break;\r\n            }\r\n        }\r\n        if (j == 10) // 找到了就把h传进去\r\n        {\r\n            fseek(fp, i * sizeof(user), SEEK_SET);\r\n            fwrite(h, sizeof(user), 1, fp);\r\n        }\r\n    }\r\n\r\n    free(u);\r\n    u = NULL;\r\n    fclose(fp);\r\n    return;\r\n}\r\n\r\n// 删除参数\r\nvoid deletepar(int par)\r\n{\r\n    int i, j, k;\r\n    par -= 1;\r\n    for (i = par; i < h->lenpar; i++)\r\n    {\r\n        for (j = 0; j < 10; j++)\r\n        {\r\n            h->parameter[par].name[j] = h->parameter[par + 1].name[j];\r\n        }\r\n        h->parameter[par].place = h->parameter[par + 1].place;\r\n        h->parameter[par].shape = h->parameter[par + 1].shape;\r\n        h->parameter[par].type = h->parameter[par + 1].type;\r\n        strcpy(h->parameter[par].S, h->parameter[par + 1].S);\r\n        for (k = 0; k < dense_points_max; k++)\r\n        {\r\n            h->parameter[par].x[k] = h->parameter[par + 1].x[k];\r\n            h->parameter[par].y[k] = h->parameter[par + 1].y[k];\r\n        }\r\n        h->parameter[par].lenxy = h->parameter[par + 1].lenxy;\r\n    }\r\n    h->lenpar -= 1;\r\n    wr_h();\r\n}\r\n\r\n// 下面四个返回1为修改成功，返回-1为无修改\r\n\r\n// 修改产区\r\nint changeplace(int par)\r\n{\r\n    char choose;\r\n    clrmous(MouseX, MouseY);\r\n    setfillstyle(1, BROWN);\r\n    bar(100, 130, 540, 370);\r\n    puthz(220, 150, \"请重新选择产区\", 32, 32, BLUE);\r\n    setfillstyle(1, CYAN);\r\n    bar(150, 290, 240, 340);\r\n    puthz(153, 293, \"返回\", 32, 32, BLUE);\r\n    bar(400, 290, 490, 340);\r\n    puthz(403, 293, \"确认\", 32, 32, BLUE);\r\n\r\n    setfillstyle(1, LIGHTRED);\r\n    bar(305, 240, 335, 270);\r\n    puthz(300, 200, \"长江\", 16, 16, BLUE);\r\n    bar(180, 240, 210, 270);\r\n    puthz(175, 200, \"新疆\", 16, 16, BLUE);\r\n    bar(430, 240, 460, 270);\r\n    puthz(425, 200, \"黄河\", 16, 16, BLUE);\r\n\r\n    quit();\r\n\r\n    for (;;)\r\n    {\r\n        delay(15);\r\n        newmouse(&MouseX, &MouseY, &press);\r\n\r\n        if (mouse_press(305, 240, 335, 270) == 1) // 长江\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'c';\r\n            setfillstyle(1, BROWN);\r\n            bar(180, 240, 460, 270);\r\n            setfillstyle(1, BLUE);\r\n            bar(305, 240, 335, 270);\r\n            setfillstyle(1, LIGHTRED);\r\n            bar(180, 240, 210, 270);\r\n            bar(430, 240, 460, 270);\r\n        }\r\n        if (mouse_press(180, 240, 210, 270) == 1) // 新疆\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'a';\r\n            setfillstyle(1, BROWN);\r\n            bar(180, 240, 460, 270);\r\n            setfillstyle(1, BLUE);\r\n            bar(180, 240, 210, 270);\r\n            setfillstyle(1, LIGHTRED);\r\n            bar(305, 240, 335, 270);\r\n            bar(430, 240, 460, 270);\r\n        }\r\n        if (mouse_press(430, 240, 460, 270) == 1) // 黄河\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'b';\r\n            setfillstyle(1, BROWN);\r\n            bar(180, 240, 460, 270);\r\n            setfillstyle(1, BLUE);\r\n            bar(430, 240, 460, 270);\r\n            setfillstyle(1, LIGHTRED);\r\n            bar(180, 240, 210, 270);\r\n            bar(305, 240, 335, 270);\r\n        }\r\n\r\n        if (mouse_press(150, 290, 240, 340) == 1) // 返回\r\n        {\r\n            return -1;\r\n        }\r\n        if (mouse_press(400, 290, 490, 340) == 1) // 确认\r\n        {\r\n            h->parameter[par - 1].place = choose;\r\n            wr_h();\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\n// 修改土地形状\r\nint changeshape(int par)\r\n{\r\n    char choose;\r\n    clrmous(MouseX, MouseY);\r\n    setfillstyle(1, BROWN);\r\n    bar(100, 130, 540, 370);\r\n    puthz(200, 150, \"请重新选择土地形状\", 32, 32, BLUE);\r\n    setfillstyle(1, CYAN);\r\n    bar(150, 290, 240, 340);\r\n    puthz(153, 293, \"返回\", 32, 32, BLUE);\r\n    bar(400, 290, 490, 340);\r\n    puthz(403, 293, \"确认\", 32, 32, BLUE);\r\n\r\n    setfillstyle(1, YELLOW);\r\n    pieslice(170, 240, 0, 360, 20);\r\n    puthz(155, 195, \"矩形\", 16, 16, BLUE);\r\n    pieslice(270, 240, 0, 360, 20);\r\n    puthz(255, 195, \"圆形\", 16, 16, BLUE);\r\n    pieslice(370, 240, 0, 360, 20);\r\n    puthz(340, 195, \"多边形\", 16, 16, BLUE);\r\n    pieslice(470, 240, 0, 360, 20);\r\n    puthz(425, 195, \"自定义图形\", 16, 16, BLUE);\r\n\r\n    for (;;)\r\n    {\r\n        delay(15);\r\n        newmouse(&MouseX, &MouseY, &press);\r\n        if (mouse_press(150, 220, 190, 360) == 1) // 矩形\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'a';\r\n            setfillstyle(1, BROWN);\r\n            bar(150, 220, 490, 260);\r\n            setfillstyle(1, YELLOW);\r\n            pieslice(270, 240, 0, 360, 20);\r\n            pieslice(370, 240, 0, 360, 20);\r\n            pieslice(470, 240, 0, 360, 20);\r\n            setfillstyle(1, BLUE);\r\n            pieslice(170, 240, 0, 360, 20);\r\n        }\r\n        if (mouse_press(250, 220, 290, 360) == 1) // 圆形\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'b';\r\n            setfillstyle(1, BROWN);\r\n            bar(150, 220, 490, 260);\r\n            setfillstyle(1, YELLOW);\r\n            pieslice(170, 240, 0, 360, 20);\r\n            pieslice(370, 240, 0, 360, 20);\r\n            pieslice(470, 240, 0, 360, 20);\r\n            setfillstyle(1, BLUE);\r\n            pieslice(270, 240, 0, 360, 20);\r\n        }\r\n        if (mouse_press(350, 220, 390, 360) == 1) // 多边形\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'c';\r\n            setfillstyle(1, BROWN);\r\n            bar(150, 220, 490, 260);\r\n            setfillstyle(1, YELLOW);\r\n            pieslice(270, 240, 0, 360, 20);\r\n            pieslice(170, 240, 0, 360, 20);\r\n            pieslice(470, 240, 0, 360, 20);\r\n            setfillstyle(1, BLUE);\r\n            pieslice(370, 240, 0, 360, 20);\r\n        }\r\n        if (mouse_press(450, 220, 490, 360) == 1) // 自定义图形\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'd';\r\n            setfillstyle(1, BROWN);\r\n            bar(150, 220, 490, 260);\r\n            setfillstyle(1, YELLOW);\r\n            pieslice(270, 240, 0, 360, 20);\r\n            pieslice(370, 240, 0, 360, 20);\r\n            pieslice(170, 240, 0, 360, 20);\r\n            setfillstyle(1, BLUE);\r\n            pieslice(470, 240, 0, 360, 20);\r\n        }\r\n        if (mouse_press(150, 290, 240, 340) == 1) // 返回\r\n        {\r\n            return -1;\r\n        }\r\n        if (mouse_press(400, 290, 490, 340) == 1) // 确认\r\n        {\r\n            if (choose == 'c')\r\n            {\r\n                select02(&(h->parameter[par - 1]));\r\n            }\r\n            else if (choose == 'd')\r\n            {\r\n                select03(&(h->parameter[par - 1]));\r\n            }\r\n            h->parameter[par - 1].shape = choose;\r\n            wr_h();\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\n// 修改收割机类型\r\nint changetype(int par)\r\n{\r\n    char choose;\r\n    clrmous(MouseX, MouseY);\r\n    setfillstyle(1, BROWN);\r\n    bar(100, 130, 540, 370);\r\n    puthz(220, 150, \"请重新选择产区\", 32, 32, BLUE);\r\n    setfillstyle(1, CYAN);\r\n    bar(150, 290, 240, 340);\r\n    puthz(153, 293, \"返回\", 32, 32, BLUE);\r\n    bar(400, 290, 490, 340);\r\n    puthz(403, 293, \"确认\", 32, 32, BLUE);\r\n\r\n    setfillstyle(1, YELLOW);\r\n    pieslice(200, 240, 0, 360, 20);\r\n    puthz(175, 195, \"垂直式\", 16, 16, BLUE);\r\n    pieslice(440, 240, 0, 360, 20);\r\n    puthz(415, 195, \"水平式\", 16, 16, BLUE);\r\n\r\n    for (;;)\r\n    {\r\n        delay(15);\r\n        newmouse(&MouseX, &MouseY, &press);\r\n        if (mouse_press(180, 220, 220, 260) == 1) // 垂直式\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'a';\r\n            setfillstyle(1, BROWN);\r\n            bar(180, 220, 460, 260);\r\n            setfillstyle(1, YELLOW);\r\n            pieslice(440, 240, 0, 360, 20);\r\n            setfillstyle(1, BLUE);\r\n            pieslice(200, 240, 0, 360, 20);\r\n        }\r\n        if (mouse_press(420, 220, 460, 260) == 1) // 水平式\r\n        {\r\n            clrmous(MouseX, MouseY);\r\n            choose = 'b';\r\n            setfillstyle(1, BROWN);\r\n            bar(180, 220, 460, 260);\r\n            setfillstyle(1, YELLOW);\r\n            pieslice(200, 240, 0, 360, 20);\r\n            setfillstyle(1, BLUE);\r\n            pieslice(440, 240, 0, 360, 20);\r\n        }\r\n        if (mouse_press(150, 290, 240, 340) == 1) // 返回\r\n        {\r\n            return -1;\r\n        }\r\n        if (mouse_press(400, 290, 490, 340) == 1) // 确认\r\n        {\r\n            h->parameter[par - 1].type = choose;\r\n            wr_h();\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\n// 修改面积\r\nint changeS(int par)\r\n{\r\n    INPUT S = {245, 220, 445, 260, \"\", 6, 0, 0};\r\n    clrmous(MouseX, MouseY);\r\n    setfillstyle(1, BROWN);\r\n    bar(100, 130, 540, 370);\r\n    puthz(220, 150, \"请重新输入面积\", 32, 32, BLUE);\r\n    setfillstyle(1, CYAN);\r\n    bar(150, 290, 240, 340);\r\n    puthz(153, 293, \"返回\", 32, 32, BLUE);\r\n    bar(400, 290, 490, 340);\r\n    puthz(403, 293, \"确认\", 32, 32, BLUE);\r\n    puthz(170, 220, \"面积：\", 32, 32, BLUE);\r\n    setfillstyle(1, 0);\r\n    bar(245, 220, 445, 260);\r\n\r\n    for (;;)\r\n    {\r\n        delay(15);\r\n        newmouse(&MouseX, &MouseY, &press);\r\n        input_s(248, 220, &S, 16, 0);\r\n\r\n        if (mouse_press(150, 290, 240, 340) == 1) // 返回\r\n        {\r\n            return -1;\r\n        }\r\n        if (mouse_press(400, 290, 490, 340) == 1) // 确认\r\n        {\r\n            strcpy(h->parameter[par - 1].S, S.string);\r\n            wr_h();\r\n            return 1;\r\n        }\r\n    }\r\n}\r\n\r\nvoid parcpy(struct Parameter *a, struct Parameter *b)\r\n{\r\n    int k;\r\n    for (k = 0; k < 10; k++)\r\n    {\r\n        a->name[k] = b->name[k];\r\n    }\r\n    a->place = b->place;\r\n    a->shape = b->shape;\r\n    a->type = b->type;\r\n    strcpy(a->S, b->S);\r\n    for (k = 0; k < dense_points_max; k++)\r\n    {\r\n        a->x[k] = b->x[k];\r\n        a->y[k] = b->y[k];\r\n    }\r\n    a->lenxy = b->lenxy;\r\n}\r\n\r\nint *search(char *str)\r\n{\r\n    int i, j, k;\r\n    int par[PAR]; // 优先度数组，与参数一一对应，无对应则为0\r\n    //int temp;\r\n    //struct Parameter parpar[PAR], temppar;\r\n    for (i = 0; i < h->lenpar; i++) // 第i个参数\r\n    {\r\n        par[i] = 1;\r\n        for (j = 0; j < strlen(str); j++) // str中第j个字符\r\n        {\r\n            for (k = 0; k < strlen(h->parameter[i].name); k++) // 第i个参数中第k个字符\r\n            {\r\n                if (str[j] == h->parameter[i].name[k])\r\n                {\r\n                    par[i] += 1; // 有相同的则其优先度+1\r\n                }\r\n            }\r\n        }\r\n        //parcpy(&parpar[i], &(h->parameter[i]));\r\n    }\r\n    // 按优先度大到小排序\r\n    // for (i = 0; i < h->lenpar; i++)\r\n    // {\r\n    //     for (k = 0; k < h->lenpar; k++)\r\n    //     {\r\n    //         if (par[k] < par[k + 1])\r\n    //         {\r\n    //             temp = par[k];\r\n    //             par[k] = par[k + 1];\r\n    //             par[k + 1] = temp;\r\n\r\n    //             parcpy(&temppar, &parpar[k]);\r\n    //             parcpy(&parpar[k], &parpar[k + 1]);\r\n    //             parcpy(&parpar[k + 1], &temppar);\r\n    //         }\r\n    //     }\r\n    // }\r\n    return par;\r\n}\r\n    // if (flag == 1)\r\n    // {\r\n    // setfillstyle(1, LIGHTGRAY);\r\n    // bar(50, 80, 590, 420);\r\n    // settextstyle(0, 0, 2);\r\n    // outtextxy(320, 405, page);\r\n    // outtextxy(280, 405, \"<<\");\r\n    // outtextxy(360, 405, \">>\");\r\n    // settextstyle(0, 0, 3);\r\n    // setcolor(DARKGRAY);\r\n\r\n    // setcolor(BLUE);\r\n    // rectangle(510, 80, 580, 125);\r\n    //puthz(200, 85, \"搜索结果\", 32, 32, BLUE);\r\n    // puthz(510, 85, \"查询\", 32, 32, BLUE);\r\n\r\n    // for (i = 0, j = pagepar * 4; i < (4 > ((h->lenpar) - (pagepar * 4)) ? ((h->lenpar) - (pagepar * 4)) : 4); i++, j++)\r\n    // {\r\n    //     setfillstyle(1, barcolor[rand() % 12]);\r\n    //     bar(90, 150 + 60 * i, 300, 150 + 40 + 60 * i);\r\n    //     outtextxy(195, 170 + 60 * i, parpar[i].name);\r\n    // }\r\n    // for (i = 0; i < (4 > ((h->lenpar) - (pagepar * 4)) ? ((h->lenpar) - (pagepar * 4)) : 4); i++)\r\n    // {\r\n    //     setfillstyle(1, 14);\r\n    //     bar(460, 150 + 60 * i, 520, 150 + 40 + 60 * i);\r\n    //     puthz(470, 160 + 60 * i, \"查看\", 16, 16, BLUE);\r\n    // }\r\n\r\n    // for (;;)\r\n    // {\r\n    //     newmouse(&MouseX, &MouseY, &press);\r\n    //     delay(15);\r\n    //     // 四个查看按钮\r\n    //     if ((mouse_press(460, 150 + 60 * 0, 520, 150 + 40 + 60 * 0) == 1) && ((h->lenpar - (pagepar * 4)) > 0))\r\n    //     {\r\n    //         int pagepar;\r\n    //         char page2[1];\r\n    //         page2[1] = '\\0';\r\n    //         page2[0] = page[0];\r\n    //         pagepar = atoi(page2) - 1;\r\n\r\n    //         return (pagepar)*4 + 1;\r\n    //     }\r\n    //     if ((mouse_press(460, 150 + 60 * 1, 520, 150 + 40 + 60 * 1) == 1) && ((h->lenpar - (pagepar * 4)) > 1))\r\n    //     {\r\n    //         int pagepar;\r\n    //         char page2[1];\r\n    //         page2[1] = '\\0';\r\n    //         page2[0] = page[0];\r\n    //         pagepar = atoi(page2) - 1;\r\n\r\n    //         return (pagepar)*4 + 2;\r\n    //     }\r\n    //     if ((mouse_press(460, 150 + 60 * 2, 520, 150 + 40 + 60 * 2) == 1) && ((h->lenpar - (pagepar * 4)) > 2))\r\n    //     {\r\n    //         int pagepar;\r\n    //         char page2[1];\r\n    //         page2[1] = '\\0';\r\n    //         page2[0] = page[0];\r\n    //         pagepar = atoi(page2) - 1;\r\n\r\n    //         return (pagepar)*4 + 3;\r\n    //     }\r\n    //     if ((mouse_press(460, 150 + 60 * 3, 520, 150 + 40 + 60 * 3) == 1) && ((h->lenpar - (pagepar * 4)) > 3))\r\n    //     {\r\n    //         int pagepar;\r\n    //         char page2[1];\r\n    //         page2[1] = '\\0';\r\n    //         page2[0] = page[0];\r\n    //         pagepar = atoi(page2) - 1;\r\n\r\n    //         return (pagepar)*4 + 4;\r\n    //     }\r\n    //     //page last\r\n    //     if (mouse_press(260, 395, 310, 415) == 1)\r\n\t// \t{\r\n\t// \t\tif (page[0] > '1')\r\n\t// \t\t{\r\n\t// \t\t\tpage[0] -= 1;\r\n\t// \t\t\tflag = 1;\r\n\t// \t\t}\r\n\t// \t\telse\r\n\t// \t\t{\r\n\t// \t\t\tsetfillstyle(1, CYAN);\r\n\t// \t\t\tbar(230, 30, 450, 80);\r\n\t// \t\t\tputhz(240, 30, \"第一页啦\", 32, 32, BLUE);\r\n\t// \t\t\tdelay(300);\r\n\t// \t\t\tsetfillstyle(1, 0);\r\n\t// \t\t\tbar(230, 30, 450, 80);\r\n\t// \t\t\tputhz(240, 30, \"参数列表\", 32, 32, BLUE);\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n\t// \t// page next\r\n\t// \tif (mouse_press(330, 395, 380, 415) == 1)\r\n\t// \t{\r\n\t// \t\tif (page[0] < page[2])\r\n\t// \t\t{\r\n\t// \t\t\tpage[0] += 1;\r\n\t// \t\t\tflag = 1;\r\n\t// \t\t}\r\n\t// \t\telse if (page[0] == page[2])\r\n\t// \t\t{\r\n\t// \t\t\tsetfillstyle(1, CYAN);\r\n\t// \t\t\tbar(230, 30, 450, 80);\r\n\t// \t\t\tputhz(240, 30, \"最后一页啦\", 32, 32, BLUE);\r\n\t// \t\t\tdelay(300);\r\n\t// \t\t\tsetfillstyle(1, 0);\r\n\t// \t\t\tbar(230, 30, 450, 80);\r\n\t// \t\t\tputhz(240, 30, \"参数列表\", 32, 32, BLUE);\r\n\t// \t\t}\r\n\t// \t}\r\n\r\n    //     // enter\r\n    //     if (mouse_press(0, 0, 40, 30) == 0 || mouse_press(0, 450, 40, 480) == 0 || mouse_press(260, 395, 310, 415) == 0 )\r\n    //     {\r\n    //         MouseS = 0;\r\n    //     }\r\n    //     if (mouse_press(0, 0, 40, 30) == 2 || mouse_press(0, 450, 40, 480) == 2 || mouse_press(260, 395, 310, 415) == 2 )\r\n    //     {\r\n    //         MouseS = 1;\r\n    //     }\r\n    //     // quit\r\n    //     if (mouse_press(0, 0, 40, 30) == 1)\r\n    //     {\r\n    //         exit(0);\r\n    //     }\r\n    //     // last\r\n    //     if (mouse_press(0, 450, 40, 480) == 1)\r\n    //     {\r\n    //         return 100;\r\n    //     }\r\n    // }\r\n    // flag = 0;\r\n    // }\r\n//}"
        }
    ]
}