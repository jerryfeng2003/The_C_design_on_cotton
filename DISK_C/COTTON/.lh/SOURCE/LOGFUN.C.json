{
    "sourceFile": "SOURCE/LOGFUN.C",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1681394008673,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1681526461837,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #include \"TOTAL.H\"\r\n \r\n-// ��������\r\n+// 键盘输入\r\n void input_s(int x, int y, INPUT *word, int size, int mode)\r\n {\r\n \tif (press == 1)\r\n \t{\r\n@@ -27,9 +27,9 @@\n \t\t\t// line(x+(word->cursor)*(2*size-2)+2,y,x+(word->cursor)*(2*size-2)+2,y+2*(2*size-2));\r\n \t\t}\r\n \t}\r\n \r\n-\t// flagΪ1ʱ��ʾ���Խ��ռ�������\r\n+\t// flag为1时表示可以接收键盘输入\r\n \tif (word->flag == 1)\r\n \t{\r\n \t\tchar t;\r\n \r\n@@ -79,9 +79,9 @@\n \t\t}\r\n \t}\r\n }\r\n \r\n-// ¼��ע���˺ŵ��ļ�\r\n+// 录入注册账号到文件\r\n void wr_user(char username1[], char password1[], char phonenumber1[])\r\n {\r\n \tFILE *fp;\r\n \tint i;\r\n@@ -92,9 +92,9 @@\n \t\tu->here[i].cotton_type = 0;\r\n \t}\r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn;\r\n \t}\r\n \tfor (i = 0; i < 10; i++)\r\n@@ -109,26 +109,26 @@\n \tfseek(fp, 0, SEEK_END);\r\n \tfwrite(u, sizeof(user), 1, fp);\r\n \tfree(u);\r\n \tu = NULL;\r\n-\tif (fclose(fp) != 0) // �ر��ļ�\r\n+\tif (fclose(fp) != 0) // 关闭文件\r\n \t{\r\n-\t\tputhz(120, 300, \"�رմ���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"关闭错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn;\r\n \t}\r\n }\r\n \r\n-// �ж�ע����˺��Ƿ��Ѿ�����\r\n-// return flagΪ1����ڣ�0�򲻴���\r\n+// 判断注册的账号是否已经存在\r\n+// return flag为1则存在，0则不存在\r\n int username_same(char username0[])\r\n {\r\n \tFILE *fp;\r\n \tuser *u = (user *)malloc(sizeof(user));\r\n \tint i, j, all, flag = 0;\r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn 0;\r\n \t}\r\n \tfseek(fp, 0, SEEK_END);\r\n@@ -138,9 +138,9 @@\n \t\tflag = 0;\r\n \t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n \t\tfread(u, sizeof(user), 1, fp);\r\n \r\n-\t\tfor (j = 0; j < 10; j++) // �����˺�λ��\r\n+\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n \t\t{\r\n \t\t\tif (u->username[j] != username0[j])\r\n \t\t\t{\r\n \t\t\t\tbreak;\r\n@@ -159,9 +159,9 @@\n \t\t\ts = imagesize(220, 100, 520, 150);\r\n \t\t\tbuffer = malloc(s);\r\n \t\t\tgetimage(220, 100, 520, 150, buffer);\r\n \t\t\tbar(220, 100, 520, 150);\r\n-\t\t\tputhz(220, 100, \"ע���˺��Ѵ���\", 32, 32, BLUE);\r\n+\t\t\tputhz(220, 100, \"注册账号已存在\", 32, 32, BLUE);\r\n \t\t\tdelay(2000);\r\n \t\t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\t\tflag = 1;\r\n \t\t\tfree(buffer);\r\n@@ -175,9 +175,9 @@\n \t\ts = imagesize(220, 100, 420, 150);\r\n \t\tbuffer = malloc(s);\r\n \t\tgetimage(220, 100, 420, 150, buffer);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"ע���˺ųɹ�\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"注册账号成功\", 32, 32, BLUE);\r\n \t\tdelay(2000);\r\n \t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\tfree(buffer);\r\n \t}\r\n@@ -186,18 +186,18 @@\n \tu = NULL;\r\n \treturn flag;\r\n }\r\n \r\n-// ��¼���ж��˺��Ƿ����and�����Ƿ���ȷ\r\n+// 登录，判断账号是否存在and密码是否正确\r\n int logg(char username0[], char password0[])\r\n {\r\n \tFILE *fp;\r\n \tuser *u = (user *)malloc(sizeof(user));\r\n \tint i, j, k, l, o, flag = 0, all;\r\n \r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn;\r\n \t}\r\n \tfseek(fp, 0, SEEK_END);\r\n@@ -211,9 +211,9 @@\n \t\t// outtextxy(100+200*i,280,u->password);\r\n \t\t// outtextxy(100+200*i,380,\"666\");\r\n \t\t//delay(2000);\r\n \r\n-\t\tfor (j = 0; j < 10; j++) // �����˺�λ��\r\n+\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n \t\t{\r\n \t\t\tif (u->username[j] != username0[j])\r\n \t\t\t{\r\n \t\t\t\tbreak;\r\n@@ -223,9 +223,9 @@\n \t\t\t\tj = 10;\r\n \t\t\t\tbreak;\r\n \t\t\t}\r\n \t\t}\r\n-\t\tif (j == 10) // ����ҵ����˺žͿ�ʼ�ȶ�����\r\n+\t\tif (j == 10) // 如果找到了账号就开始比对密码\r\n \t\t{\r\n \t\t\tfor (k = 0; k < 10; k++)\r\n \t\t\t{\r\n \t\t\t\tif (u->password[k] != password0[k])\r\n@@ -286,9 +286,9 @@\n \t\ts = imagesize(220, 100, 420, 150);\r\n \t\tbuffer = malloc(s);\r\n \t\tgetimage(220, 100, 420, 150, buffer);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"��¼ʧ��\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"登录失败\", 32, 32, BLUE);\r\n \t\tdelay(1000);\r\n \t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\tfree(buffer);\r\n \t}\r\n@@ -305,9 +305,9 @@\n \tint i, j, k, flag = 0, all;\r\n \r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn;\r\n \t}\r\n \tfseek(fp, 0, SEEK_END);\r\n@@ -315,9 +315,9 @@\n \tfor (i = 0; i < all; i++)\r\n \t{\r\n \t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n \t\tfread(u, sizeof(user), 1, fp);\r\n-\t\tfor (j = 0; j < 10; j++) // �����˺�λ��\r\n+\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n \t\t{\r\n \r\n \t\t\tif (u->username[j] != username0[j])\r\n \t\t\t{\r\n@@ -328,9 +328,9 @@\n \t\t\t\tj = 10;\r\n \t\t\t\tbreak;\r\n \t\t\t}\r\n \t\t}\r\n-\t\tif (j == 10) // �ҵ��˾��жϵ绰����������ȷ\r\n+\t\tif (j == 10) // 找到了就判断电话号码正不正确\r\n \t\t{\r\n \r\n \t\t\tfor (j = 0; j < 12; j++)\r\n \t\t\t{\r\n@@ -345,9 +345,9 @@\n \t\t\t\t\tj = 12;\r\n \t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t}\r\n-\t\t\tif (j == 12) // �绰������ȷ�͸�����\r\n+\t\t\tif (j == 12) // 电话号码正确就改密码\r\n \t\t\t{\r\n \t\t\t\t// outtextxy(200,200,u->phonenumber);\r\n \t\t\t\tfor (k = 0; k < 10; k++)\r\n \t\t\t\t{\r\n@@ -362,9 +362,9 @@\n \tif (flag == 1)\r\n \t{\r\n \t\tsetfillstyle(1, CYAN);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"��������ɹ�\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"更改密码成功\", 32, 32, BLUE);\r\n \t\tdelay(2000);\r\n \t}\r\n \telse\r\n \t{\r\n@@ -374,9 +374,9 @@\n \t\ts = imagesize(220, 100, 420, 150);\r\n \t\tbuffer = malloc(s);\r\n \t\tgetimage(220, 100, 420, 150, buffer);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"��������ʧ��\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"更改密码失败\", 32, 32, BLUE);\r\n \t\tdelay(2000);\r\n \t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\tfree(buffer);\r\n \t}\r\n"
                },
                {
                    "date": 1681526482215,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n #include \"TOTAL.H\"\r\n \r\n-// ��������\r\n+// 键盘输入\r\n void input_s(int x, int y, INPUT *word, int size, int mode)\r\n {\r\n \tif (press == 1)\r\n \t{\r\n@@ -27,9 +27,9 @@\n \t\t\t// line(x+(word->cursor)*(2*size-2)+2,y,x+(word->cursor)*(2*size-2)+2,y+2*(2*size-2));\r\n \t\t}\r\n \t}\r\n \r\n-\t// flagΪ1ʱ��ʾ���Խ��ռ�������\r\n+\t// flag为1时表示可以接收键盘输入\r\n \tif (word->flag == 1)\r\n \t{\r\n \t\tchar t;\r\n \r\n@@ -79,9 +79,9 @@\n \t\t}\r\n \t}\r\n }\r\n \r\n-// ¼��ע���˺ŵ��ļ�\r\n+// 录入注册账号到文件\r\n void wr_user(char username1[], char password1[], char phonenumber1[])\r\n {\r\n \tFILE *fp;\r\n \tint i;\r\n@@ -92,9 +92,9 @@\n \t\tu->here[i].cotton_type = 0;\r\n \t}\r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn;\r\n \t}\r\n \tfor (i = 0; i < 10; i++)\r\n@@ -109,26 +109,26 @@\n \tfseek(fp, 0, SEEK_END);\r\n \tfwrite(u, sizeof(user), 1, fp);\r\n \tfree(u);\r\n \tu = NULL;\r\n-\tif (fclose(fp) != 0) // �ر��ļ�\r\n+\tif (fclose(fp) != 0) // 关闭文件\r\n \t{\r\n-\t\tputhz(120, 300, \"�رմ���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"关闭错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn;\r\n \t}\r\n }\r\n \r\n-// �ж�ע����˺��Ƿ��Ѿ�����\r\n-// return flagΪ1����ڣ�0�򲻴���\r\n+// 判断注册的账号是否已经存在\r\n+// return flag为1则存在，0则不存在\r\n int username_same(char username0[])\r\n {\r\n \tFILE *fp;\r\n \tuser *u = (user *)malloc(sizeof(user));\r\n \tint i, j, all, flag = 0;\r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn 0;\r\n \t}\r\n \tfseek(fp, 0, SEEK_END);\r\n@@ -138,9 +138,9 @@\n \t\tflag = 0;\r\n \t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n \t\tfread(u, sizeof(user), 1, fp);\r\n \r\n-\t\tfor (j = 0; j < 10; j++) // �����˺�λ��\r\n+\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n \t\t{\r\n \t\t\tif (u->username[j] != username0[j])\r\n \t\t\t{\r\n \t\t\t\tbreak;\r\n@@ -159,9 +159,9 @@\n \t\t\ts = imagesize(220, 100, 520, 150);\r\n \t\t\tbuffer = malloc(s);\r\n \t\t\tgetimage(220, 100, 520, 150, buffer);\r\n \t\t\tbar(220, 100, 520, 150);\r\n-\t\t\tputhz(220, 100, \"ע���˺��Ѵ���\", 32, 32, BLUE);\r\n+\t\t\tputhz(220, 100, \"注册账号已存在\", 32, 32, BLUE);\r\n \t\t\tdelay(2000);\r\n \t\t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\t\tflag = 1;\r\n \t\t\tfree(buffer);\r\n@@ -175,9 +175,9 @@\n \t\ts = imagesize(220, 100, 420, 150);\r\n \t\tbuffer = malloc(s);\r\n \t\tgetimage(220, 100, 420, 150, buffer);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"ע���˺ųɹ�\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"注册账号成功\", 32, 32, BLUE);\r\n \t\tdelay(2000);\r\n \t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\tfree(buffer);\r\n \t}\r\n@@ -186,18 +186,18 @@\n \tu = NULL;\r\n \treturn flag;\r\n }\r\n \r\n-// ��¼���ж��˺��Ƿ����and�����Ƿ���ȷ\r\n+// 登录，判断账号是否存在and密码是否正确\r\n int logg(char username0[], char password0[])\r\n {\r\n \tFILE *fp;\r\n \tuser *u = (user *)malloc(sizeof(user));\r\n \tint i, j, k, l, o, flag = 0, all;\r\n \r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn 0;\r\n \t}\r\n \tfseek(fp, 0, SEEK_END);\r\n@@ -211,9 +211,9 @@\n \t\t// outtextxy(100+200*i,280,u->password);\r\n \t\t// outtextxy(100+200*i,380,\"666\");\r\n \t\t//delay(2000);\r\n \r\n-\t\tfor (j = 0; j < 10; j++) // �����˺�λ��\r\n+\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n \t\t{\r\n \t\t\tif (u->username[j] != username0[j])\r\n \t\t\t{\r\n \t\t\t\tbreak;\r\n@@ -223,9 +223,9 @@\n \t\t\t\tj = 10;\r\n \t\t\t\tbreak;\r\n \t\t\t}\r\n \t\t}\r\n-\t\tif (j == 10) // ����ҵ����˺žͿ�ʼ�ȶ�����\r\n+\t\tif (j == 10) // 如果找到了账号就开始比对密码\r\n \t\t{\r\n \t\t\tfor (k = 0; k < 10; k++)\r\n \t\t\t{\r\n \t\t\t\tif (u->password[k] != password0[k])\r\n@@ -286,9 +286,9 @@\n \t\ts = imagesize(220, 100, 420, 150);\r\n \t\tbuffer = malloc(s);\r\n \t\tgetimage(220, 100, 420, 150, buffer);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"��¼ʧ��\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"登录失败\", 32, 32, BLUE);\r\n \t\tdelay(1000);\r\n \t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\tfree(buffer);\r\n \t}\r\n@@ -305,9 +305,9 @@\n \tint i, j, k, flag = 0, all;\r\n \r\n \tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n \t{\r\n-\t\tputhz(120, 300, \"�򿪴���\", 32, 32, BLUE);\r\n+\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n \t\tdelay(3000);\r\n \t\treturn;\r\n \t}\r\n \tfseek(fp, 0, SEEK_END);\r\n@@ -315,9 +315,9 @@\n \tfor (i = 0; i < all; i++)\r\n \t{\r\n \t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n \t\tfread(u, sizeof(user), 1, fp);\r\n-\t\tfor (j = 0; j < 10; j++) // �����˺�λ��\r\n+\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n \t\t{\r\n \r\n \t\t\tif (u->username[j] != username0[j])\r\n \t\t\t{\r\n@@ -328,9 +328,9 @@\n \t\t\t\tj = 10;\r\n \t\t\t\tbreak;\r\n \t\t\t}\r\n \t\t}\r\n-\t\tif (j == 10) // �ҵ��˾��жϵ绰����������ȷ\r\n+\t\tif (j == 10) // 找到了就判断电话号码正不正确\r\n \t\t{\r\n \r\n \t\t\tfor (j = 0; j < 12; j++)\r\n \t\t\t{\r\n@@ -345,9 +345,9 @@\n \t\t\t\t\tj = 12;\r\n \t\t\t\t\tbreak;\r\n \t\t\t\t}\r\n \t\t\t}\r\n-\t\t\tif (j == 12) // �绰������ȷ�͸�����\r\n+\t\t\tif (j == 12) // 电话号码正确就改密码\r\n \t\t\t{\r\n \t\t\t\t// outtextxy(200,200,u->phonenumber);\r\n \t\t\t\tfor (k = 0; k < 10; k++)\r\n \t\t\t\t{\r\n@@ -362,9 +362,9 @@\n \tif (flag == 1)\r\n \t{\r\n \t\tsetfillstyle(1, CYAN);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"��������ɹ�\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"更改密码成功\", 32, 32, BLUE);\r\n \t\tdelay(2000);\r\n \t}\r\n \telse\r\n \t{\r\n@@ -374,9 +374,9 @@\n \t\ts = imagesize(220, 100, 420, 150);\r\n \t\tbuffer = malloc(s);\r\n \t\tgetimage(220, 100, 420, 150, buffer);\r\n \t\tbar(220, 100, 420, 150);\r\n-\t\tputhz(220, 100, \"��������ʧ��\", 32, 32, BLUE);\r\n+\t\tputhz(220, 100, \"更改密码失败\", 32, 32, BLUE);\r\n \t\tdelay(2000);\r\n \t\tputimage(220, 100, buffer, COPY_PUT);\r\n \t\tfree(buffer);\r\n \t}\r\n"
                }
            ],
            "date": 1681394008673,
            "name": "Commit-0",
            "content": "#include \"TOTAL.H\"\r\n\r\n// 键盘输入\r\nvoid input_s(int x, int y, INPUT *word, int size, int mode)\r\n{\r\n\tif (press == 1)\r\n\t{\r\n\t\tif (mouse_press(word->x1, word->y1, word->x2, word->y2) == 1)\r\n\t\t{\r\n\t\t\tword->flag = 1;\r\n\r\n\t\t\tclrmous(MouseX, MouseY);\r\n\t\t\tsetcolor(RED);\r\n\t\t\tsetlinestyle(0, 0, 1);\r\n\t\t\trectangle(word->x1, word->y1, word->x2, word->y2);\r\n\t\t\tsetcolor(DARKGRAY);\r\n\t\t\t// line(x+(word->cursor)*(2*size-2)+2,y,x+(word->cursor)*(2*size-2)+2,y+2*(2*size-2));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tword->flag = 0;\r\n\r\n\t\t\tclrmous(MouseX, MouseY);\r\n\t\t\tsetcolor(LIGHTGREEN);\r\n\t\t\tsetlinestyle(0, 0, 1);\r\n\t\t\trectangle(word->x1, word->y1, word->x2, word->y2);\r\n\t\t\t// line(x+(word->cursor)*(2*size-2)+2,y,x+(word->cursor)*(2*size-2)+2,y+2*(2*size-2));\r\n\t\t}\r\n\t}\r\n\r\n\t// flag为1时表示可以接收键盘输入\r\n\tif (word->flag == 1)\r\n\t{\r\n\t\tchar t;\r\n\r\n\t\tif (kbhit())\r\n\t\t{\r\n\t\t\tt = getch();\r\n\r\n\t\t\tif (t == '\\b')\r\n\t\t\t{\r\n\t\t\t\tif (word->cursor > 0)\r\n\t\t\t\t{\r\n\t\t\t\t\t(word->string)[word->cursor - 1] = '\\0';\r\n\t\t\t\t\t(word->cursor)--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (t >= '!' && t <= '~')\r\n\t\t\t{\r\n\t\t\t\tif (word->cursor < word->length)\r\n\t\t\t\t{\r\n\t\t\t\t\t(word->string)[word->cursor] = t;\r\n\t\t\t\t\t(word->string)[word->cursor + 1] = '\\0';\r\n\t\t\t\t\t(word->cursor)++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetcolor(DARKGRAY);\r\n\t\t\tsetlinestyle(0, 0, 1);\r\n\t\t\tsetfillstyle(SOLID_FILL, WHITE);\r\n\t\t\tsettextjustify(LEFT_TEXT, TOP_TEXT);\r\n\t\t\tsettextstyle(SMALL_FONT, HORIZ_DIR, size);\r\n\t\t\tbar(word->x1 + 2, word->y1 + 2, word->x2 - 2, word->y2 - 2);\r\n\t\t\tif (mode == 0)\r\n\t\t\t{\r\n\t\t\t\tsetcolor(DARKGRAY);\r\n\t\t\t\touttextxy(x, y, word->string);\r\n\t\t\t\t// line(x+(word->cursor)*(2*size-2)+2,y,x+(word->cursor)*(2*size-2)+2,y+2*(2*size-2));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tint i;\r\n\t\t\t\tfor (i = 0; i < word->cursor; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\touttextxy(x + i * (2 * size - 2), y, \"*\");\r\n\t\t\t\t}\r\n\t\t\t\t// line(x+(word->cursor)*(2*size-2)+2,y,x+(word->cursor)*(2*size-2)+2,y+2*(2*size-2));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// 录入注册账号到文件\r\nvoid wr_user(char username1[], char password1[], char phonenumber1[])\r\n{\r\n\tFILE *fp;\r\n\tint i;\r\n\tuser *u = (user *)malloc(sizeof(user));\r\n\tu->lenpar = 0;\r\n\tfor (i = 0; i < 3; i++)\r\n\t{\r\n\t\tu->here[i].cotton_type = 0;\r\n\t}\r\n\tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n\t{\r\n\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n\t\tdelay(3000);\r\n\t\treturn;\r\n\t}\r\n\tfor (i = 0; i < 10; i++)\r\n\t{\r\n\t\tu->username[i] = username1[i];\r\n\t\tu->password[i] = password1[i];\r\n\t}\r\n\tfor (i = 0; i < 12; i++)\r\n\t{\r\n\t\tu->phonenumber[i] = phonenumber1[i];\r\n\t}\r\n\tfseek(fp, 0, SEEK_END);\r\n\tfwrite(u, sizeof(user), 1, fp);\r\n\tfree(u);\r\n\tu = NULL;\r\n\tif (fclose(fp) != 0) // 关闭文件\r\n\t{\r\n\t\tputhz(120, 300, \"关闭错误\", 32, 32, BLUE);\r\n\t\tdelay(3000);\r\n\t\treturn;\r\n\t}\r\n}\r\n\r\n// 判断注册的账号是否已经存在\r\n// return flag为1则存在，0则不存在\r\nint username_same(char username0[])\r\n{\r\n\tFILE *fp;\r\n\tuser *u = (user *)malloc(sizeof(user));\r\n\tint i, j, all, flag = 0;\r\n\tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n\t{\r\n\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n\t\tdelay(3000);\r\n\t\treturn;\r\n\t}\r\n\tfseek(fp, 0, SEEK_END);\r\n\tall = ftell(fp) / sizeof(user);\r\n\tfor (i = 0; i < all; i++)\r\n\t{\r\n\t\tflag = 0;\r\n\t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n\t\tfread(u, sizeof(user), 1, fp);\r\n\r\n\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n\t\t{\r\n\t\t\tif (u->username[j] != username0[j])\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (username0[j] == '\\0')\r\n\t\t\t{\r\n\t\t\t\tj = 10;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (j == 10)\r\n\t\t{\r\n\t\t\tvoid *buffer;\r\n\t\t\tunsigned s;\r\n\t\t\tsetfillstyle(1, CYAN);\r\n\t\t\ts = imagesize(220, 100, 520, 150);\r\n\t\t\tbuffer = malloc(s);\r\n\t\t\tgetimage(220, 100, 520, 150, buffer);\r\n\t\t\tbar(220, 100, 520, 150);\r\n\t\t\tputhz(220, 100, \"注册账号已存在\", 32, 32, BLUE);\r\n\t\t\tdelay(2000);\r\n\t\t\tputimage(220, 100, buffer, COPY_PUT);\r\n\t\t\tflag = 1;\r\n\t\t\tfree(buffer);\r\n\t\t}\r\n\t}\r\n\tif (flag == 0)\r\n\t{\r\n\t\tvoid *buffer;\r\n\t\tunsigned s;\r\n\t\tsetfillstyle(1, CYAN);\r\n\t\ts = imagesize(220, 100, 420, 150);\r\n\t\tbuffer = malloc(s);\r\n\t\tgetimage(220, 100, 420, 150, buffer);\r\n\t\tbar(220, 100, 420, 150);\r\n\t\tputhz(220, 100, \"注册账号成功\", 32, 32, BLUE);\r\n\t\tdelay(2000);\r\n\t\tputimage(220, 100, buffer, COPY_PUT);\r\n\t\tfree(buffer);\r\n\t}\r\n\tfclose(fp);\r\n\tfree(u);\r\n\tu = NULL;\r\n\treturn flag;\r\n}\r\n\r\n// 登录，判断账号是否存在and密码是否正确\r\nint logg(char username0[], char password0[])\r\n{\r\n\tFILE *fp;\r\n\tuser *u = (user *)malloc(sizeof(user));\r\n\tint i, j, k, l, o, flag = 0, all;\r\n\r\n\tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n\t{\r\n\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n\t\tdelay(3000);\r\n\t\treturn;\r\n\t}\r\n\tfseek(fp, 0, SEEK_END);\r\n\tall = ftell(fp) / sizeof(user);\r\n\tfor (i = 0; i < all; i++)\r\n\t{\r\n\r\n\t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n\t\tfread(u, sizeof(user), 1, fp);\r\n\t\t// outtextxy(100+200*i,180,u->username);\r\n\t\t// outtextxy(100+200*i,280,u->password);\r\n\t\t// outtextxy(100+200*i,380,\"666\");\r\n\t\t//delay(2000);\r\n\r\n\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n\t\t{\r\n\t\t\tif (u->username[j] != username0[j])\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (username0[j] == '\\0')\r\n\t\t\t{\r\n\t\t\t\tj = 10;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (j == 10) // 如果找到了账号就开始比对密码\r\n\t\t{\r\n\t\t\tfor (k = 0; k < 10; k++)\r\n\t\t\t{\r\n\t\t\t\tif (u->password[k] != password0[k])\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (password0[k] == '\\0')\r\n\t\t\t\t{\r\n\t\t\t\t\tk = 10;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (k == 10)\r\n\t\t\t{\r\n\t\t\t\tstrcpy(h->username, u->username);\r\n\t\t\t\tstrcpy(h->password, u->password);\r\n\t\t\t\tstrcpy(h->phonenumber, u->phonenumber);\r\n\t\t\t\th->lenpar = u->lenpar;\r\n\t\t\t\tfor (l = 0; l < u->lenpar; l++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (o = 0; o < 10; o++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\th->parameter[l].name[o] = u->parameter[l].name[o];\r\n\t\t\t\t\t}\r\n\t\t\t\t\th->parameter[l].place = u->parameter[l].place;\r\n\t\t\t\t\th->parameter[l].shape = u->parameter[l].shape;\r\n\t\t\t\t\th->parameter[l].type = u->parameter[l].type;\r\n\t\t\t\t\tstrcpy(h->parameter[l].S, u->parameter[l].S);\r\n\t\t\t\t\tfor (k = 0; k < dense_points_max; k++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\th->parameter[l].x[k] = u->parameter[l].x[k];\r\n\t\t\t\t\t\th->parameter[l].y[k] = u->parameter[l].y[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t\th->parameter[l].lenxy = u->parameter[l].lenxy;\r\n\t\t\t\t}\r\n\t\t\t\tfor (l = 0; l < 5; l++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (k = 0; k < 15; k++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\th->here[l].ware_name[k] = u->here[l].ware_name[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (k = 0; k < 3; k++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\th->here[l].total[k] = u->here[l].total[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t\th->here[l].cotton_type = u->here[l].cotton_type;\r\n\t\t\t\t}\r\n\t\t\t\tflag=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (flag == 0)\r\n\t{\r\n\t\tvoid *buffer;\r\n\t\tunsigned s;\r\n\t\tsetfillstyle(1, CYAN);\r\n\t\ts = imagesize(220, 100, 420, 150);\r\n\t\tbuffer = malloc(s);\r\n\t\tgetimage(220, 100, 420, 150, buffer);\r\n\t\tbar(220, 100, 420, 150);\r\n\t\tputhz(220, 100, \"登录失败\", 32, 32, BLUE);\r\n\t\tdelay(1000);\r\n\t\tputimage(220, 100, buffer, COPY_PUT);\r\n\t\tfree(buffer);\r\n\t}\r\n\tfclose(fp);\r\n\tfree(u);\r\n\tu = NULL;\r\n\treturn flag;\r\n}\r\n\r\nint changepassword(char username0[], char newpassword0[], char phonenumber0[])\r\n{\r\n\tFILE *fp;\r\n\tuser *u = (user *)malloc(sizeof(user));\r\n\tint i, j, k, flag = 0, all;\r\n\r\n\tif ((fp = fopen(\"User.dat\", \"rb+\")) == NULL)\r\n\t{\r\n\t\tputhz(120, 300, \"打开错误\", 32, 32, BLUE);\r\n\t\tdelay(3000);\r\n\t\treturn;\r\n\t}\r\n\tfseek(fp, 0, SEEK_END);\r\n\tall = ftell(fp) / sizeof(user);\r\n\tfor (i = 0; i < all; i++)\r\n\t{\r\n\t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n\t\tfread(u, sizeof(user), 1, fp);\r\n\t\tfor (j = 0; j < 10; j++) // 查找账号位置\r\n\t\t{\r\n\r\n\t\t\tif (u->username[j] != username0[j])\r\n\t\t\t{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (username0[j] == '\\0')\r\n\t\t\t{\r\n\t\t\t\tj = 10;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (j == 10) // 找到了就判断电话号码正不正确\r\n\t\t{\r\n\r\n\t\t\tfor (j = 0; j < 12; j++)\r\n\t\t\t{\r\n\r\n\t\t\t\tif (u->phonenumber[j] != phonenumber0[j])\r\n\t\t\t\t{\r\n\t\t\t\t\t// outtextxy(200,200,u->phonenumber);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (phonenumber0[j] == '\\0')\r\n\t\t\t\t{\r\n\t\t\t\t\tj = 12;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (j == 12) // 电话号码正确就改密码\r\n\t\t\t{\r\n\t\t\t\t// outtextxy(200,200,u->phonenumber);\r\n\t\t\t\tfor (k = 0; k < 10; k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tu->password[k] = newpassword0[k];\r\n\t\t\t\t}\r\n\t\t\t\tfseek(fp, i * sizeof(user), SEEK_SET);\r\n\t\t\t\tfwrite(u, sizeof(user), 1, fp);\r\n\t\t\t\tflag = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (flag == 1)\r\n\t{\r\n\t\tsetfillstyle(1, CYAN);\r\n\t\tbar(220, 100, 420, 150);\r\n\t\tputhz(220, 100, \"更改密码成功\", 32, 32, BLUE);\r\n\t\tdelay(2000);\r\n\t}\r\n\telse\r\n\t{\r\n\t\tvoid *buffer;\r\n\t\tunsigned s;\r\n\t\tsetfillstyle(1, CYAN);\r\n\t\ts = imagesize(220, 100, 420, 150);\r\n\t\tbuffer = malloc(s);\r\n\t\tgetimage(220, 100, 420, 150, buffer);\r\n\t\tbar(220, 100, 420, 150);\r\n\t\tputhz(220, 100, \"更改密码失败\", 32, 32, BLUE);\r\n\t\tdelay(2000);\r\n\t\tputimage(220, 100, buffer, COPY_PUT);\r\n\t\tfree(buffer);\r\n\t}\r\n\r\n\tfree(u);\r\n\tu = NULL;\r\n\tfclose(fp);\r\n\treturn flag;\r\n}"
        }
    ]
}